"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const DatingRepository_1 = require("../../infrastructure/repository/DatingRepository");
const DatingUseCase_1 = require("../../application/usecase/DatingUseCase");
const DatingController_1 = require("../controllers/DatingController");
const verifyJWT_1 = __importDefault(require("../../utils/verifyJWT"));
const router = express_1.default.Router();
const repo = new DatingRepository_1.DatingRepository();
const service = new DatingUseCase_1.DatingUseCase(repo);
const datingController = new DatingController_1.DatingController(service);
router.post('/api/user/swipe-profiles', verifyJWT_1.default, datingController.swipeProfile.bind(datingController));
router.post('/api/user/dating-tab2', verifyJWT_1.default, datingController.updateDatingProfileImages.bind(datingController));
router.post('/api/user/fetch-matches', verifyJWT_1.default, datingController.fetchMatches.bind(datingController));
router.post('/api/user/get-user-datingprofile', verifyJWT_1.default, datingController.getUserDatingProfile.bind(datingController));
router.post('/api/user/dating-tab1', verifyJWT_1.default, datingController.handleDatingTab1.bind(datingController));
router.post('/api/user/dating-tab3', verifyJWT_1.default, datingController.handleDatingTab3.bind(datingController));
router.post('/api/user/dating-tab4', verifyJWT_1.default, datingController.handleDatingTab4.bind(datingController));
router.post('/api/user/settings', verifyJWT_1.default, datingController.handleUserSettings.bind(datingController));
router.post('/api/user/dating-tab1-getdetails', verifyJWT_1.default, datingController.getDatingTab1Details.bind(datingController));
router.post('/api/admin/delete-record', verifyJWT_1.default, datingController.adminDeleteRecord.bind(datingController));
router.post('/api/user/delete-comment', verifyJWT_1.default, datingController.deleteComment.bind(datingController));
router.post('/api/user/delete-post', verifyJWT_1.default, datingController.deletePost.bind(datingController));
router.post('/api/user/fetch-post-comment', verifyJWT_1.default, datingController.fetchPostComment.bind(datingController));
router.post('/api/user/user-posted-comment', verifyJWT_1.default, datingController.userPostedComment.bind(datingController));
router.post('/api/user/likedUserDetails', verifyJWT_1.default, datingController.likedUserDetails.bind(datingController));
router.post('/api/user/delete-commentreply', verifyJWT_1.default, datingController.deleteCommentReply.bind(datingController));
router.post('/api/user/post-already-reported', verifyJWT_1.default, datingController.postAlreadyReported.bind(datingController));
router.post('/api/user/user-posted-reply', verifyJWT_1.default, datingController.userPostedReply.bind(datingController));
router.post('/api/user/profile-completion-status', verifyJWT_1.default, datingController.profileCompletionStatus.bind(datingController));
exports.default = router;
